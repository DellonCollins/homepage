{"version":3,"sources":["Constellation/point.js","Constellation/pointmanager.js","Constellation/sketch.js","Constellation/constellation.js","Components/RadialNav/CakeSvg.js","Components/RadialNav/MenuBar.js","Components/RadialNav/RadialNav.js","Components/SpanText.js","Pages/Home/Credentials.js","Pages/Home/Salutation.js","Pages/Home/Home.js","Components/ResponsiveGrid/ResponsiveGrid.js","Components/SpanTextWrapper.js","Pages/About/About.js","Pages/Skills/Skills.js","Pages/Gallery/Gallery.js","Pages/Contact/Contact.js","Redux/InitialState.js","Redux/Store.js","Redux/Reducer.js","Nav/Logo.js","Nav/NavLink.js","Nav/MenuButton.js","Nav/NavLinks.js","Nav/Nav.js","Pages/PageRouter/PageRouter.js","Layout/layout.js","App.js","serviceWorker.js","index.js"],"names":["Point","p","x","y","mass","isVisible","this","radius","velocity","prototype","draw","fill","noStroke","ellipse","distance","point","dx","dy","Math","sqrt","e","console","log","MIN_MASS","MAX_MASS","PointManager","numPoints","width","height","dimensions","points","it","initialize","i","random","push","resize","mouseOver","lines","applyForces","drawLines","stayInBounds","drawPoints","forEach","pt","index","length","other","force","dist","start","end","mx","mouseX","my","mouseY","line","startX","startY","endX","endY","stroke","strokeWeight","sketch","pm","setup","createCanvas","clear","myCustomRedrawAccordingToNewPropsHandler","props","resizeCanvas","Constellation","wrapper","useRef","useState","setWidth","setHeight","setMouseOver","getContainer","document","getElementsByClassName","getDimensions","el","clientWidth","clientHeight","window","onresize","useEffect","onmouseenter","onmouseleave","className","ref","CakeSVG","clipPathUnits","id","strokeWidth","d","MenuBar","setN","n","RadialNav","onRedirect","React","isActive","setIsActive","direction","text","path","selected","buttons","setButtons","getClassActive","setSelected","map","b","rb","buttonText","key","style","onClick","onAnimationStart","event","SpanText","split","char","Credentials","value","cred","NAME_SHORT","NAME_FULL","Salutation","name","setName","nameOnResize","getName","innerWidth","addEventListener","connect","state","credentials","withRouter","history","redirectPath","setRedirectPath","shouldExit","setExit","onAnimationEnd","target","ResponsiveGrid","children","SpanTextWrapper","classes","c","concat","position","aboutInfo","title","facts","Skills","Gallery","Contact","initialState","pages","component","Home","About","short","full","logoText","skills","contact","email","personal","defaultStateMap","store","createStore","type","connectComponent","mapState","NavLink","to","route","MenuButton","toggleActivity","links","isMenuActive","setMenuActive","Fragment","link","isHome","location","pathname","match","PageRouter","Layout","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ae098bf.chunk.js","sourcesContent":["const SPEED_LIMIT = 3\r\nexport default function Point(p, x=0, y=0, mass=10, isVisible = true){\r\n    this.p = p\r\n    this.x = x; this.y = y; \r\n    this.mass = mass; this.radius = mass/2\r\n    this.velocity = {x : 0, y : 0}\r\n    this.isVisible = isVisible\r\n\r\n    \r\n}\r\n\r\nPoint.prototype.draw = function(){\r\n    if(!this.isVisible) return\r\n    // this.p.fill('#a8f1a122'); \r\n    // this.p.fill('rgba(245, 181, 192, 0.2)')\r\n    this.p.fill('#353535'); \r\n    this.p.noStroke();\r\n    this.p.ellipse(this.x, this.y, this.mass)\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n\r\n    if(this.velocity.y > SPEED_LIMIT) this.velocity.y = SPEED_LIMIT\r\n    if(this.velocity.y < -SPEED_LIMIT) this.velocity.y = -SPEED_LIMIT\r\n    if(this.velocity.x > SPEED_LIMIT) this.velocity.x = SPEED_LIMIT\r\n    if(this.velocity.x < -SPEED_LIMIT) this.velocity.x = -SPEED_LIMIT\r\n}\r\n\r\nPoint.prototype.distance = function(point){\r\n    try{\r\n        var dx = this.x - point.x;\r\n        var dy = this.y - point.y;\r\n        dx *= dx;\r\n        dy *= dy;\r\n        return Math.sqrt(dx + dy)\r\n    }catch (e) {\r\n        console.log(point, this)\r\n        return 1000\r\n    }\r\n}","import Point from \"./point\";\r\n\r\nconst MIN_MASS = 10, MAX_MASS = 30;\r\nexport default function PointManager(p, numPoints = 15, width, height){\r\n    this.p = p; this.numPoints = numPoints\r\n    this.dimensions = {x : width, y : height}\r\n    this.points = []\r\n\r\n    this.it = 0\r\n    \r\n\r\n    this.initialize = () => {\r\n        this.points = []\r\n        for(let i = 0; i < numPoints; i++){\r\n            let mass = this.p.random(MIN_MASS, MAX_MASS)\r\n            let x = this.p.random(0 + mass, this.dimensions.x - mass), y = this.p.random(0 + mass, this.dimensions.y - mass)\r\n            this.points.push(new Point(this.p, x, y, mass))\r\n        }\r\n    }\r\n\r\n    this.resize = (width, height) => {\r\n        if(width){ this.dimensions.x = width}\r\n        if(height){ this.dimensions.y = height  }\r\n    }\r\n    \r\n    this.draw = (mouseOver) => { let lines = this.applyForces(mouseOver); this.drawLines(lines); this.stayInBounds(); this.drawPoints(); this.it ++}\r\n\r\n    this.drawPoints = () => { this.points.forEach(pt => pt.draw())}\r\n\r\n    this.applyForces = (mouseOver) => {\r\n        var lines = []\r\n        this.points.forEach((point, index) => {\r\n            for(let i = index + 1; i < this.points.length; i++){\r\n                let other = this.points[i]\r\n                let force = { \r\n                    x: other.x - point.x,\r\n                    y: other.y - point.y,\r\n                    dist : ((other.x - point.x) ** 2 + (other.y - point.y) ** 2) ** 1.2\r\n                }\r\n\r\n                other.velocity.x += force.x / force.dist; other.velocity.y += force.y / force.dist\r\n                point.velocity.x -= force.x / force.dist; point.velocity.y -= force.y / force.dist\r\n                if(point.distance(other) < 100){\r\n                    lines.push({\r\n                        start : {x:point.x, y: point.y, radius:point.radius},\r\n                        end : {x:other.x, y:other.y, radius:other.radius}\r\n                    })\r\n                }\r\n            }\r\n\r\n\r\n            if(mouseOver){\r\n                let mx = this.p.mouseX, my = this.p.mouseY\r\n                if(!mx || !my) { return}\r\n                let force = {\r\n                    x: mx - point.x,\r\n                    y: my - point.y,\r\n                    dist : ((mx - point.x) ** 2 + (my - point.y) ** 2) ** 0.85\r\n                }\r\n                point.velocity.x += force.x / force.dist; point.velocity.y += force.y / force.dist\r\n            }\r\n        })\r\n        return lines\r\n    }\r\n\r\n    this.drawLines = (lines) =>{\r\n        lines.forEach(line => {\r\n            let startX = line.start.x, startY = line.start.y, endX = line.end.x, endY = line.end.y\r\n            this.p.stroke('#333333')\r\n            this.p.strokeWeight(2)\r\n            this.p.line(startX, startY, endX, endY)\r\n        })\r\n    }\r\n\r\n    this.stayInBounds = () => {\r\n        this.points.forEach(point => {\r\n            if(point.x < 0 + point.radius){ //left\r\n                point.x = 0 + point.radius\r\n                point.velocity.x *= -0.9\r\n            }\r\n            else if(point.x > this.dimensions.x - point.radius){ //right\r\n                point.x = this.dimensions.x - point.radius\r\n                point.velocity.x *= -0.9\r\n            }\r\n\r\n            if(point.y < 0 + point.radius){\r\n                point.y = 0 + point.radius\r\n                point.velocity.y *= -0.9\r\n            }\r\n            else if(point.y > this.dimensions.y - point.radius){ //right\r\n                point.y = this.dimensions.y - point.radius\r\n                point.velocity.y *= -0.9\r\n            }\r\n        })\r\n    }\r\n}","import PointManager from \"./pointmanager\";\r\n\r\nexport default function sketch(p){\r\n    let pm, mouseOver = false\r\n    let height = 400, width = 400;\r\n    p.setup = function(){\r\n        p.createCanvas(width, height)\r\n        pm = new PointManager(p, 20, width, height)\r\n        pm.initialize()\r\n    }\r\n    p.draw = function(){\r\n        p.clear()\r\n        pm.draw(mouseOver)\r\n    }\r\n\r\n    p.myCustomRedrawAccordingToNewPropsHandler = function (props) {\r\n        if(props.width || props.height){\r\n            if(props.width){ width = props.width }\r\n            if(props.height){ height = props.height }\r\n            p.resizeCanvas(width, height)\r\n            if(pm){\r\n                pm.resize(width, height)\r\n            }\r\n        }\r\n\r\n        if(props.mouseOver !== mouseOver){\r\n            mouseOver = props.mouseOver\r\n        }\r\n    }\r\n}","import React, {useState, useEffect, useRef} from 'react'\r\nimport P5Wrapper from 'react-p5-wrapper'\r\nimport sketch from './sketch'\r\nimport './constellation.scss'\r\nexport default function Constellation(){\r\n    const wrapper = useRef(null);\r\n    const shouldClean = useRef(false);\r\n    const [width, setWidth] = useState()\r\n    const [height, setHeight] = useState()\r\n    const [mouseOver, setMouseOver] = useState(false)\r\n    function getContainer() {return document.getElementsByClassName('page-container')[0]}\r\n\r\n    var getDimensions = () => {\r\n        let el = getContainer()\r\n        setWidth(el.clientWidth); setHeight(el.clientHeight)\r\n    }\r\n    window.onresize = ()=>{ getDimensions() }\r\n    \r\n    useEffect(() => {\r\n        getDimensions()\r\n        getContainer().onmouseenter = () => {setMouseOver(true)}\r\n        getContainer().onmouseleave = () => {setMouseOver(false)}\r\n        return function clean(){\r\n            // if(shouldClean.current){\r\n            //     console.log('constellation is clean')\r\n            //     wrapper.current.state.canvas.remove()\r\n            // }\r\n            // shouldClean.current = true\r\n        }\r\n    })\r\n    return (\r\n        <div className=\"constellation\">\r\n            <P5Wrapper ref={wrapper} sketch={sketch} width={width} height={height} mouseOver={mouseOver}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nexport default function CakeSVG(){\r\n    return (\r\n        <svg height=\"0\" width=\"0\">     \r\n            {/* <defs>\r\n                <clipPath clipPathUnits=\"objectBoundingBox\" id=\"sector\">\r\n                <path fill=\"none\" stroke=\"#111\" stroke-width=\"1\" \r\n                class=\"sector\" d=\"M0.5,0.5 l0.5,0 A0.5,0.5 0 0,0 0.5,0 z\"></path>\r\n                </clipPath>\r\n            </defs> */}\r\n            <defs>\r\n                <clipPath clipPathUnits=\"objectBoundingBox\" id=\"sector\">\r\n                <path fill=\"none\" stroke=\"#111\" strokeWidth=\"10\" className=\"sector\" \r\n                d=\" \r\n                M 0.7, 0.5 \r\n                l 0.3, 0 \r\n                A 0.5,0.5 0 0,0 0.5,0 \r\n                l 0, 0.3\r\n                A 0.2,0.2 0 0,1 0.7,0.5 \r\n                z\">\r\n                </path>\r\n                </clipPath>\r\n            </defs>\r\n        </svg>\r\n    ) \r\n}","import React from 'react';\r\nimport './menubar.scss'\r\n\r\nexport default function MenuBar(){\r\n    return (\r\n        <div className=\"menubar-container\"> \r\n            <div className=\"menubar\"/>\r\n            <div className=\"menubar\"/>\r\n            <div className=\"menubar\"/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './radialnav.scss'\r\nimport CakeSvg from './CakeSvg';\r\nimport MenuBar from './MenuBar';\r\n\r\n// const radialButtons = [ \r\n//     {direction : 'top', text : 'About', path : '/about', selected : false},\r\n//     {direction : 'right', text : 'Skills', path : '/skills', selected : false},\r\n//     {direction : 'bottom', text : 'Contact', path : '/contact', selected : false},\r\n//     {direction : 'left', text : 'Gallery', path : '/gallery', selected : false}\r\n// ]\r\nvar setN = (n) => { return {\"--n\" : n}}\r\nfunction RadialNav({onRedirect}){\r\n    const [isActive, setIsActive] = React.useState(false)\r\n    const [buttons, setButtons] = React.useState(\r\n        [ \r\n            {direction : 'top', text : 'About', path : '/about', selected : false},\r\n            {direction : 'right', text : 'Skills', path : '/skills', selected : false},\r\n            {direction : 'bottom', text : 'Contact', path : '/contact', selected : false},\r\n            {direction : 'left', text : 'Gallery', path : '/gallery', selected : false}\r\n        ]   \r\n    )\r\n    \r\n    var onNavClick = () => { \r\n        setButtons(buttons.map(b => { b.selected = false; return b } ));\r\n        setIsActive(!isActive) \r\n    }    \r\n    var getClassActive = () => (isActive ? \" active\" : \" \")\r\n    var onAnimStart = (event, path) => {\r\n        onRedirect(path)\r\n    }\r\n    var renderRadialButtons = () => {\r\n        return buttons.map((rb, index) => { \r\n            var buttonText = ''\r\n            if(isActive){\r\n                buttonText = rb.text\r\n            }\r\n            return (\r\n            <li id={index} className={rb.direction + \" menu-item \" + (rb.selected ? \"selected\" : \"\")} key={index} style={setN(index)} \r\n            onClick={() => setSelected(rb.path)} onAnimationStart={(event) => onAnimStart(event, rb.path)}>\r\n                <a><span className=\"icon\">{buttonText}</span></a>\r\n            </li>\r\n        )})\r\n    }\r\n    var setSelected = (path) => { \r\n        setButtons(buttons.map(b => {\r\n            b.selected = path === b.path; return b;\r\n        }))\r\n    } \r\n\r\n    return (\r\n        <>\r\n            <CakeSvg/>\r\n            <ul className={\"menu\" + getClassActive()}>\r\n                {renderRadialButtons()}\r\n                <div className={\"button\" + getClassActive()} onClick={onNavClick}><MenuBar/></div>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RadialNav","import React from 'react'\r\nimport './components.scss';\r\n\r\n\r\n\r\nexport default function SpanText({text}){\r\n    function spanify(textString){\r\n        return textString.split('').map((char, index) => <span key={index} style={{'--n': `${index}`}}>{char}</span>)\r\n    }\r\n    return ( \r\n        <>\r\n            {spanify(text)}\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n// import './home.scss'\r\nimport SpanText from '../../Components/SpanText';\r\n\r\n\r\n// const credentials = [\r\n//     {text : 'Design'}, \r\n//     {text : 'Functionality'}, \r\n//     {text :'Stonks'}\r\n// ]\r\nexport default function Credentials({value}){\r\n    var renderCredentials = () => {\r\n        return value.map(cred => <div className=\"cred spanned-text \" key={cred.text}>\r\n            <SpanText text={cred.text}/></div>)\r\n    }\r\n\r\n    return <div className=\"credentials\">\r\n        {renderCredentials()}\r\n    </div>\r\n    \r\n}","import React, {useState, useEffect} from 'react';\r\nconst NAME_SHORT = 'Dellon', NAME_FULL = 'Dellon Collins'\r\nexport default function Salutation(){\r\n    const [name, setName] = useState(); \r\n    var nameOnResize = () => { if(name !== getName()) { setName(getName())} }\r\n    var getName = () => { return window.innerWidth > 600 ? NAME_FULL : NAME_SHORT; }\r\n    window.addEventListener('resize', () => { nameOnResize() })\r\n    useEffect(() => { nameOnResize() })\r\n    \r\n    return <div className=\"salutation\">\r\n        <div className=\"greeting\">Hi, my name's</div>\r\n        <div className=\"name\">{name}</div>\r\n        <div className=\"pronun\">pronunciation : [duh-lawn]</div>\r\n    </div>\r\n}","import React , {useState, useEffect} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nimport './home.scss';\r\n\r\nimport Constellation from '../../Constellation/constellation';\r\nimport RadialNav from '../../Components/RadialNav/RadialNav';\r\nimport Credentials from './Credentials';\r\nimport Salutation from './Salutation';\r\n\r\nfunction Home({history, credentials}){\r\n    const [redirectPath, setRedirectPath] = useState(null)\r\n    const [shouldExit, setExit] = useState(false)\r\n\r\n    //To be called by child nav when a nav button is clicked\r\n    //Sets class for exit animation and sets the redirect path\r\n    var onRadialRedirect = (path) => {setExit(true); setRedirectPath(path)}\r\n    var executeRedirectToPage = (event) => {\r\n        //If home transition is done, then execute redirect\r\n        if(event.target.id === \"home\" && redirectPath){ history.push(redirectPath)  }\r\n    }\r\n    var getHomeClassList = () => shouldExit ? \"home exit\" : \"home\";\r\n   \r\n    useEffect( () => {\r\n        return function cleanUp(){\r\n            console.log('home is dead')\r\n        }\r\n    })\r\n    return (<>\r\n        <Constellation/>\r\n        <div id=\"home\" className={getHomeClassList()} onAnimationEnd={executeRedirectToPage}>\r\n            <Salutation/>\r\n            <RadialNav onRedirect={onRadialRedirect}/>\r\n            <Credentials value={credentials}/>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst statemap = (state) => ({credentials : state.credentials})\r\nexport default connect(statemap)(withRouter(Home))","import React from 'react';\r\nimport './grid.scss';\r\n\r\nexport default function ResponsiveGrid(props){\r\n    return (\r\n        <div className=\"grid\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport SpanText from './SpanText';\r\n\r\n\r\nexport default function SpanTextWrapper({classes, text}){\r\n    const getClassNames = () => {\r\n        var classNames = 'spanned-text';\r\n\r\n        if(classes){\r\n            classes.forEach(c => { classNames.concat(` ${c}`) });\r\n        }\r\n\r\n        return classNames\r\n    }\r\n    return (<div className={getClassNames()} style={{position : 'relative'}}>\r\n        <SpanText text={text}/>\r\n    </div>)\r\n}","import React from 'react'\r\nimport './about.scss'\r\nimport { connect } from 'react-redux'\r\nimport SpanText from '../../Components/SpanText';\r\nimport ResponsiveGrid from '../../Components/ResponsiveGrid/ResponsiveGrid';\r\nimport Credentials from '../Home/Credentials';\r\nimport SpanTextWrapper from '../../Components/SpanTextWrapper';\r\n\r\n\r\nfunction About({aboutInfo}){\r\n    var renderFacts = () => {\r\n        return aboutInfo.facts.map((text, index) => {\r\n            return <p key={index}>{text}</p>\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"about\">\r\n            <div className=\"title\"> <SpanTextWrapper text={aboutInfo.title.text}/> </div>\r\n            <div className=\"grid-wrapper\">\r\n                <ResponsiveGrid>\r\n                    <div>\r\n                        <div className=\"body\">\r\n                            {renderFacts()}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className=\"body\">\r\n                            <p>Grid 2</p>\r\n                        </div>\r\n                    </div>\r\n                </ResponsiveGrid>\r\n            </div>\r\n        </div> \r\n    )\r\n}\r\n\r\nconst stateMap = state => ({aboutInfo : state.aboutInfo})\r\nexport default connect(stateMap)(About);","import React from 'react'\r\nimport './skills.scss'\r\n\r\nexport default function Skills(){\r\n   \r\n    return (\r\n        <div className=\"skills\">Skills</div> \r\n    )\r\n}","import React from 'react'\r\nimport './gallery.scss'\r\n\r\nexport default function Gallery(){\r\n   \r\n    return (\r\n        <div className=\"gallery\">Gallery</div>\r\n    )\r\n}","import React from 'react'\r\nimport './contact.scss'\r\n\r\nexport default function Contact(){\r\n   \r\n    return (\r\n        <div className=\"contact\">Contact</div> \r\n    )\r\n}","import Home from '../Pages/Home/Home';\r\nimport About from '../Pages/About/About';\r\nimport Skills from '../Pages/Skills/Skills';\r\nimport Gallery from '../Pages/Gallery/Gallery';\r\nimport Contact from '../Pages/Contact/Contact';\r\n\r\nconst initialState = {\r\n    credentials : [\r\n        {text : 'Design'}, \r\n        {text : 'Functionality'}, \r\n        {text :'Stonks'}\r\n    ],\r\n\r\n    pages : [\r\n        {text: 'Home', path : '/home', component : Home},\r\n        {text: 'About', path : '/about', component : About},\r\n        {text: 'Skills', path : '/skills', component : Skills},\r\n        {text: 'Gallery', path : '/gallery', component : Gallery},\r\n        {text: 'Contact', path : '/contact', component : Contact}\r\n    ],\r\n\r\n    name : {\r\n        short : 'Dellon', full : 'Dellon Collins'\r\n    },\r\n\r\n    logoText : '.dc()',\r\n\r\n    aboutInfo : {\r\n        title : {text : 'About Me'},\r\n        facts : [\r\n            `\\\"Things I like and things I hate… I don't feel like telling you that. \r\n            My dreams for the future… never really thought about it. As for my hobbies… I have lots of hobbies.\\\"`,\r\n            `I was born in Connecticut but I\\'ve spent most of my life in Ohio. \r\n            I graduated from The Ohio State University in 2018 with a degree in Computer Science & Engineering.`,\r\n            `My freetime is mostly taken up by making music, reading, and Super Smash Bros. Melee. I main Bowser,\r\n            Ganon, and Falcon because I'd ruin the game for everyone else if I actually tried.`\r\n        ]\r\n    },\r\n\r\n    skills : [\r\n\r\n    ],\r\n\r\n    contact : {\r\n        email : {\r\n            personal : 'collins.dellon@gmail.com',\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default initialState;","\r\nimport { connect } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport reducer from './Reducer'\r\n\r\n\r\nconst defaultStateMap = (state) => ({store : state}) \r\n\r\nexport const \r\n    store = createStore(reducer),\r\n    dispatchAction = (type, payload) => store.dispatch({type, payload}),\r\n    connectComponent = (component, mapState = defaultStateMap) => connect(mapState)(component) ","import initialState from './InitialState'\r\n\r\nexport default function reducer(state = initialState, action){\r\n    switch(action.type){\r\n        default : return state\r\n    }\r\n}","import React from 'react'\r\nimport './nav.scss'\r\nimport { connectComponent } from '../Redux/Store';\r\n\r\n\r\nfunction Logo({logoText}){\r\n    return (<div className=\"logo\">\r\n        <span></span><span>{logoText}</span>\r\n    </div>)\r\n}\r\n\r\nexport default connectComponent(\r\n    Logo,  \r\n    state => ({logoText : state.logoText})\r\n)\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './nav.scss'\r\n\r\nexport default function NavLink(props){\r\n    var isActive = () => ''\r\n    return (<Link to={props.route}>\r\n        <div className={\"nav-link \" + isActive} onClick={props.onClick}>\r\n            {props.text}\r\n        </div>\r\n    </Link>)\r\n}","import React from 'react'\r\nimport './nav.scss'\r\n\r\n\r\nexport default function MenuButton({toggleActivity}){\r\n    return (<div className=\"menu-button\" onClick={toggleActivity}>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"bar\"></div>\r\n        <div className=\"bar\"></div>\r\n    </div>)\r\n}","import React, {useState} from 'react'\r\nimport './nav.scss'\r\nimport NavLink from './NavLink';\r\nimport MenuButton from './MenuButton';\r\nimport { connectComponent } from '../Redux/Store';\r\n\r\nfunction NavLinks({links}){\r\n    \r\n    const [isMenuActive, setMenuActive] = useState(false)\r\n\r\n    var getClassName = () => (\"nav-links\" + (isMenuActive ? ' active' : ''))\r\n    var renderLinks = () => {\r\n        return links.map(link => <NavLink key={link.text} text={link.text} route={link.path} onClick={() => {setMenuActive(false)}}/>)\r\n    }\r\n    return (<React.Fragment>\r\n        <div className={getClassName()}>\r\n            {renderLinks()}\r\n        </div>\r\n        <MenuButton toggleActivity={() => setMenuActive(!isMenuActive) }></MenuButton>\r\n    </React.Fragment>)\r\n}\r\n\r\nexport default connectComponent(NavLinks, state => ({links : state.pages}))\r\n","import React from 'react'\r\nimport './nav.scss'\r\nimport {withRouter} from 'react-router-dom';\r\nimport Logo from './Logo';\r\nimport NavLinks from './NavLinks';\r\n\r\nfunction Nav(props){\r\n    var isHome = () => props.location.pathname.match(\"/home.*\")\r\n    var renderLinks = () => isHome() ?  null : <NavLinks/>\r\n    var navbarClassList = () => isHome() ? \"navbar transparent\" : \"navbar\"\r\n    return(<nav className={navbarClassList()}>\r\n        <Logo></Logo>\r\n        {renderLinks()}\r\n    </nav>)\r\n}\r\n\r\nexport default withRouter(Nav)","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router'\r\nimport './page.scss';\r\nimport Home from '../Home/Home';\r\nimport About from '../About/About';\r\nimport Skills from '../Skills/Skills';\r\nimport Gallery from '../Gallery/Gallery';\r\nimport Contact from '../Contact/Contact';\r\n\r\nexport default function PageRouter(){\r\n    return (\r\n        <div className=\"page-container\">\r\n            <Switch>\r\n                <Route path=\"/home\" component={Home}/>\r\n                <Route path=\"/about\" component={About}/>\r\n                <Route path=\"/skills\" component={Skills}/>\r\n                <Route path=\"/gallery\" component={Gallery}/>\r\n                <Route path=\"/contact\" component={Contact}/>\r\n                <Redirect to=\"/home\"/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './layout.scss'\r\nimport Nav from '../Nav/Nav';\r\nimport PageRouter from '../Pages/PageRouter/PageRouter';\r\n\r\nexport default function Layout(){\r\n    return (<div className=\"container\">\r\n        <Nav/>\r\n        <PageRouter/>\r\n    </div>)\r\n}","import React from 'react';\nimport './App.scss';\nimport Layout from './Layout/layout';\nimport {HashRouter} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Layout></Layout>\n    </HashRouter>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport {store} from './Redux/Store'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}